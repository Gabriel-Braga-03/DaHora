unit Model.Horario;

interface
    uses
        Model.Turma,
        Model.Professor,
        Model.Materia,
        Model.Lotacao,
        Model.Aula,
        REST.Json;

    type
        // Tipos de Arrays
        TArrayOfTurma = array of TTurma;
        TArrayOfProfessor = array of TProfessor;
        TArrayOfMateria = array of TMateria;
        TArrayOfLotacao = array of TLotacao;
        TArrayOfAula = array of TAula;

        THorario = class
        private
            // Atributos
            Fnome: String;
            Faulas_pd: Byte;
            Fturmas: TArrayOfTurma;
            Fprofessores: TArrayOfProfessor;
            Fmaterias: TArrayOfMateria;
            Flotacoes: TArrayOfLotacao;
            Faulas: TArrayOfAula;
        public
            // Propriedades
            property turmas: TArrayOfTurma read Fturmas write Fturmas;
            property professores: TArrayOfProfessor read Fprofessores write Fprofessores;
            property materias: TArrayOfMateria read Fmaterias write Fmaterias;
            property lotacoes: TArrayOfLotacao read Flotacoes write Flotacoes;
            property aulas: TArrayOfAula read Faulas write Faulas;

            // Métodos Especiais
            function saveWithJson(): String;
        end;

implementation
// THorario (Implementações)
    // Função para salvar como Json
    function THorario.saveWithJson(): String;
    begin
        Result := TJson.ObjectToJsonObject(Self).Format();
    end;

end.
